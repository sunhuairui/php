<?php

namespace Home\Controller;
use Home\Model\PictureModel;
use OT\File;
use Home\Model\TagModel;
use Home\Model\Category_beeModel;

class Bee1Controller extends HomeController {
    protected $pagesize = 20;
    
    public function checklogin() {
        $result = '';
       if ($this->user) {
           $result = $this->user;
       } else {
           $result = 'var authdata = null';
       }
       
       $this->ajaxReturn($result);
    }
    
    // 临时增加
    private function assginCategory() {
        $category = new Category_beeModel();
        $categorys=$category->where(array('status'=>1))
            ->order('sort desc, id desc')
            ->select();
        
        $this->assign('categorys', $categorys);
    }
    
    // 模板显示页
    public function template() {
        $map = array('is_show'=>1);
        if (APP_STATUS == 'production') {
			if ($this->mid == 1) {
				// 超级管理员可以看到发布和预发布的模板
				$map['status'] = array('in', '2,3');
			} else {
				$map['status'] = 2;
			} 
        } else {
            $map['status'] = array('neq', 0);
        }

        $pageno = I('p', 1, 'intval');
        $row = I('list_row', $this->pagesize, 'intval');

        $template = D('Template');
        $templates = $template->where($map)
            ->order('sort desc, id desc')
            ->page($pageno, $row)
            ->select();
        
        foreach ($templates as $key=>$val){
         	if (empty($val['apptoken'])) {
                $token = generate_nonce_str(8);
                $time = time();
                $insertdata = array(
                    'name'=>$val['name'],
                    'title'=>$val['title'],
                    'desc'=>$val['desc'],
                    'uid'=>'0',
                    'username'=>'游戏模板',
                    'token'=>$token,
                    'template_id'=>$val['id'],
                    'create_time'=>$time,
                    'modify_time'=>0,
                    'status'=>2,
                    'icon_url'=>$val['icon_url'],
                    'appsecret'=>'',
                    'is_diy'=>2
                );

                D('Project')->add($insertdata);
                $template->where(array('id'=>$val['id']))->save(array('apptoken'=>$token));
                $templates[$key]['codeurl'] = "http://".SITE_DOMAIN.'/Public/gamecreator/templates/'.$val['name'].'/?appid='.$token;
            } else {
                $templates[$key]['codeurl'] = "http://".SITE_DOMAIN.'/Public/gamecreator/templates/'.$val['name'].'/?appid='.$val['apptoken'];
            }
        }

        $count = $template->where($map)->count();
        $tag = new TagModel();
        $tags = $tag->where(array('status'=>1))
            ->order('sort desc, id desc')
            ->page($pageno, $row)
            ->select();
        $pagenum = ceil($count / $row);
        if ($pagenum > $pageno) {
            $this->assign('is_more', true);
        }
        
        $this->assign('tags', $tags);
        $this->assign('templates', $templates);
        $this->assginCategory();
		$this->display();
    }
    
    // 第三步
    public function step3($name) {
        $this->create($name);
    }
    
    // 设置游戏配置
    public function setting($appid) {
        $addprizes = array(); //定义奖品数组

        //获取抽奖类型
        $raffletype = (int)I('post.raffletype');
        if($raffletype >= 0 && $raffletype <=3){           
            $this->_updateSetting($appid, 'raffletype', $raffletype);
            if(in_array($raffletype, array(0, 1))){
                //update settings
                $isallowrepeatwin = I('post.isallowrepeatwin');
                $nowinmsg = I('post.nowinmsg');
                $winrepeattimes = I('post.winrepeattimes');

                $prizes = $_POST['prizes'];
                $this->_updateSetting($appid, 'isallowrepeatwin', $isallowrepeatwin);
                $this->_updateSetting($appid, 'nowinmsg', $nowinmsg);
                $this->_updateSetting($appid, 'winrepeattimes', $winrepeattimes);
                if($raffletype == 0){
                    //抽奖
                    $lot_id = 0;
                    foreach ($prizes as $item) {
                        $addprizes[] = array(
                                "lot_id"=>++$lot_id,
                                "appid"=>$appid,
                                "lot_name"=>$item['lot_name'],
                                "lot_count"=>$item['lot_count'],
                                "probability"=>$item['probability'],
                                "lot_desc"=>$item['lot_desc'],
                                "lot_winning_tips"=>$item['lot_winning_tips'],
                                "lot_url"=>$item['lot_url'],
                                "lot_type"=>$item['lot_type'],
                                "lot_code_setting"=>'',
                                "status"=>1,
                                "create_time"=>time(),
                                "modify_time"=>0
                            );
                    }
                }else{
                    //奖券
                    $lot_id = 0;
                    foreach ($prizes as $item) {
                        $addprizes[] = array(
                                "lot_id"=>++$lot_id,
                                "appid"=>$appid,
                                "lot_name"=>$item['lot_name'],
                                "lot_count"=>$item['lot_count'],
                                "probability"=>$item['probability'],
                                "lot_desc"=>'',
                                "lot_winning_tips"=>$item['lot_winning_tips'],
                                "lot_url"=>'',
                                "lot_type"=>$item['lot_type'],
                                "lot_code_setting"=>json_encode($item['lot_code_setting']),
                                "status"=>1,
                                "create_time"=>time(),
                                "modify_time"=>0
                            );
                        //此处需要插入到gamecode 表中
                        $this->importgamecode($appid, $lot_id, $item['lot_code_setting'], $item['lot_count']);
                    }
                }
            }else if($raffletype == 2){
                $prizes = $_POST['prizes'];
                //update settings
                $starttime = I('post.starttime');
                $endtime = I('post.endtime');
                $prizeruledesc = I('post.prizeruledesc');

                $this->_updateSetting($appid, 'starttime', strtotime($starttime));
                $this->_updateSetting($appid, 'endtime', strtotime($endtime)+86400-1);
                $this->_updateSetting($appid, 'prizeruledesc', $prizeruledesc);

                $lot_id = 0;
                foreach ($prizes as $item) {
                    $addprizes[] = array(
                            "lot_id"=>++$lot_id,
                            "appid"=>$appid,
                            "lot_name"=>$item['lot_name'],
                            "lot_count"=>$item['lot_count'],
                            "probability"=>0,
                            "lot_desc"=>$item['lot_desc'],
                            "lot_winning_tips"=>'',
                            "lot_url"=>$item['lot_url'],
                            "lot_type"=>$item['lot_type'],
                            "lot_code_setting"=>json_encode($item['lot_code_setting']),
                            "status"=>1,
                            "create_time"=>time(),
                            "modify_time"=>0
                        );
                }

            }else{

            }
            //删除之前的奖项，插入新的奖项
            if(!empty($addprizes)){
                $prizetable = D('sdk_lottery_prize');

                //有可能删除的数据不存在，所以不判断返回值
                $res = $prizetable->where(array('appid'=>$appid,'status'=>1,'lot_type'=>$raffletype))->delete();

                $res = $prizetable->addAll($addprizes);
                if(!$res){
                    $this->ajaxReturn(array(
                        "code"=>1,
                        "msg"=>"插入数据错误",
                        "data"=>array()
                    ));
                }else{
                    $this->ajaxReturn(array(
                        "code"=>0,
                        "msg"=>"提交成功",
                        "data"=>array()
                    ));
                }
            }

        }
        $this->ajaxReturn(array('code'=>0,"msg"=>'',"data"=>array()));
    }

    // 如果setting表中appid, item_key数据存在，则更新item_value,反之 则插入新的数据
    private function _updateSetting($appid, $item_key, $item_value){
        $settings = D('sdk_settings');
        // update raffletype
        $settings->where(array('appid'=>$appid, 'item_key'=>$item_key, 'status'=>1))->find();
        if ($settings->id) {
            $settings->item_value = $item_value;
            $settings->modify_time = time();
            $res = $settings->save();
        } else {
            $res = $settings->add(array(
                "appid" => $appid,
                "item_key" => $item_key,
                "item_value" => $item_value,
                "status" => 1,
                "create_time" => time(),
                "modify_time" => 0
            ));
        }

        if (!res) {
            $this->ajaxReturn(array(
                    "code"=>1,
                    "msg"=>"操作数据库错误",
                    "data"=>array()
                ));
        }
    }


    // 删除设置项
    public function delsetting($id){
        $project = D('sdk_lottery_prize');
        $row = $project->where(array('id'=>$id))->find();

        if(!empty($row)){
            $gamecodetable = D('sdk_gamecode');
            $gamecodetable->where(array('appid'=>$row['appid'],'status'=>2,'lot_id'=>$row['lot_id']))->delete();
        }
        $project->where(array('id'=>$id))->delete();
        $this->ajaxReturn($row);
    }

    // 导入gamecode
    public function importgamecode($appid, $lot_id, $lot_code_setting, $lot_count){
        $data = array();
        if (is_array($lot_code_setting) && $appid && $lot_id) {
            if(isset($lot_code_setting['type']) && $lot_code_setting['type'] == 1 && !empty($lot_code_setting['prefix'])){
                //系统自动生成
                // @todo 临时对$lot_count做一个限制，限制在10000以内
                if ($lot_count > 10000) $lot_count = 10000;
                for ($i=0; $i < $lot_count; $i++) { 
                    $data[] = $lot_code_setting['prefix'] . generate_nonce_str(10);
                }
            }else if(isset($lot_code_setting['type']) && $lot_code_setting['type'] == 2 && !empty($lot_code_setting['key'])){
                //用户导入
                $data = $this->getGamecodeToRedis($lot_code_setting['key']);
            } else {

            }
        }
        
        if (!empty($data)) {
            $gamecodetable = D('sdk_gamecode');
            $gamecodetable->where(array('appid'=>$appid,'status'=>2,'lot_id'=>$lot_id))->delete();
            $rows = array();
            foreach ($data as $code) {
                $rows[] = array('appid'=>$appid, 'openid'=>'', 'lot_id'=>$lot_id, 'gamecode'=>$code, 'status'=>2);
            }

            $gamecodetable->addAll($rows);
        }
    }

    // 删除
    public function delete($appid) {
        $project = D('Project');
        $env = (APP_STATUS == 'production') ? 1 : 0;
        $project->where(array('token'=>$appid, 'status'=>array('neq', -1), 'env'=>$env))->find();
//         $project->status = -1;
        $project->status = 0;
        $project->save();
        $this->ajaxReturn(1);
    }

    // 取消删除
    public function canceldelete($appid){
        $project = D('Project');
        $env = (APP_STATUS == 'production') ? 1 : 0;
        $project->where(array('token'=>$appid, 'status'=>array('eq', -1), 'env'=>$env))->find();
        $project->status = 1;
        $project->save();
        $this->ajaxReturn(1);
    }
    
    // 我的数据
    public function statistics () {
        if (!is_login()) {
            redirect(U('User/newlogin'));
        }

        $settingModel = D('Settings');
        $userTotalData = $settingModel->getDataByUser($this->mid);
        $userTotalData['sharerate'] = intval($userTotalData['sharecount'] * 100 / $userTotalData['pageview']);
        
        $type || $type = I('type', 'pageview');
        $type = in_array($type, array('pageview', 'userview', 'sharecount')) ? $type : 'pageview';
        $typeS = $type == 'pageview' ? 'pv' : ($type == 'userview' ? 'uv' : 'share');
        
        $Model = D('Project');
        
        $page = I ( 'p', 1, 'intval' ); // 默认显示第一页数据
        $row = I('list_row', 10, 'intval');
        $appIds = $itemArr = $itemArrs = $items = array();
        
    	// 1表示正式环境，0表示测试环境
        $env = (APP_STATUS == 'production') ? $Model::PROJECT_ENV_PRODUCTION : $Model::PROJECT_ENV_TEST;
        $map = array('env' => $env, 'uid' => $this->mid);
        
        if ($env === $Model::PROJECT_ENV_PRODUCTION) {
            $map['status'] = $Model::PROJECT_STATUS_ONLINE;
        } else {
            $map['status'] = array('neq', $Model::PROJECT_STATUS_DELETE);
        }

        $games = $Model->where ( $map )->order('status DESC,id DESC')->select ();
        if($games) {
            
            foreach ($games as $val) {
                $appid = $val['id'];
                $appIds[] = $appid;
                $itemArr[$appid]['appid'] = $val['token'];
                $itemArr[$appid]['title'] = $val['title'];
            }        
            
            $redis = redis();
            $redis->sadd('uid:' . $this->mid . ':appid', $appIds);
            $appInfo = $redis->sort(
                    'uid:' . $this->mid . ':appid', 
                    array(
                        'sort'=>'desc', 
                        'by'=>'appid:*->'. $typeS .':total',
                        'get'=>array('#', 'appid:*->pv:total', 'appid:*->uv:total', 'appid:*->share:total'),
                        //'limit' => array(($page - 1) * $row, $row),

                    )
                );
            
            for ($i=0; $i<count($appInfo); ) {
                list($appid, $pv, $uv, $sc) = array_slice($appInfo, $i, 4);
                if(null !== $appid && in_array($appid, $appIds)) {
                    $itemArrs[] = array(
                            'appid' => $itemArr[$appid]['appid'],
                            'title' => $itemArr[$appid]['title'],
                            'pageview'  => (int) $pv,
                            'userview'  => (int) $uv,
                            'sharecount'=> (int) $sc,
                    );
                }
                
                $i += 4;
            }
            
            $items = array_slice($itemArrs, ($page - 1) * $row, $row);
        }
        
        // 分页
        $count = count($games);
        if ($count > $row) {
            $page = new \Think\Page($count, $row);
            $page->rollPage = $row;
            $page->setConfig('theme', '%FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% %HEADER%');
            $htmlPage = $page->show();
            $this->assign('page', $htmlPage);
        }
         
        $this->assign('curType', $type);
        $this->assign('total', $userTotalData);
        $this->assign('items', $items);
        $this->display();
    }

    // 上下线
    public function setStatus($appid, $status) {
    	$Model = D('Project');
    	
    	if(false !== $Model->checkProjectStatus($status)) {
    	    $env = (APP_STATUS == 'production') ? $Model::PROJECT_ENV_PRODUCTION : $Model::PROJECT_ENV_TEST;
    	    $map = array('token' => $appid, 'env' => $env);
    	     
    	    if($status == 2) $map['status'] = array('neq', 2);
    	    else $map['status'] = array('eq', 2);
    	     
    	    $Model->where ( $map )->find ();
    	    $Model->status = $status;
    	    $Model->save ();
    	    $this->ajaxReturn (1);
    	} else {
    	    $this->ajaxReturn (0);
    	}
    	
    }
    
    // 查看自己的游戏
    public function view() {
        if(!is_login()) {
            redirect(U('User/newlogin'));
        }

        $Model = D('Project');
    	// 1表示正式环境，0表示测试环境
    	$env = (APP_STATUS == 'production') ? $Model::PROJECT_ENV_PRODUCTION : $Model::PROJECT_ENV_TEST;
    	$page = I ( 'p', 1, 'intval' ); // 默认显示第一页数据
    	$row = I('list_row', $this->pagesize, 'intval');
    	$uid = $this->mid;
    	
        $map = array();
    	$map['env'] = $env;
    	$map['uid'] = $uid;
        $map['status'] = array('neq', $Model::PROJECT_STATUS_DELETE);
        
    	$order = '`status` DESC,`id` DESC';
    	$gameArrs = $Model->where($map)->order($order)->page($page, $row)->select();    	
    	$appids = $games = array();
    	foreach ($gameArrs as $game) {
    		$appids[] = $game['id'];
    	}
    	
        $settingModel = D('Settings');
        $settings = $settingModel->getTotalData($appids);

        $iId = 0;
    	foreach ($gameArrs as $game) {
    		$id = $game['id'];
    		$games[$iId]['title'] = $game['title'];
    		$games[$iId]['token'] = $game['token'];
    		$games[$iId]['status'] = $game['status'];
    		$games[$iId]['pv'] = (int) $settings[$id]['pageview'];
    		$games[$iId]['uv'] = (int) $settings[$id]['userview'];
    		$games[$iId]['sc'] = (int) $settings[$id]['sharecount'];
            $games[$iId]['code_url'] = "http://".SITE_DOMAIN.'/play/'.$game['token'];
            $games[$iId]['publish_url'] = U('publish', 'appid='. $game['token']);
            $games[$iId]['edit_url']	= U('editor', 'appid='. $game['token']);
            $games[$iId]['icon_url'] = 'Public/gamecreator/app/'. $game['token'] .'/icon.png';
            //$games[$id]['icon_url'] = get_production_cover_url( $game['icon_url'] );
            $iId++;
    	}
    	
    	if (IS_POST) {
    		$this->success($games);
    	} else {
    	    $count = $Model->where ( $map )->count ();
    		$userTotalData = $settingModel->getDataByUser($uid);
    		
    		$category=new Category_beeModel();
    		$categorys = $category->where ( array('status'=>1) )->order ('sort DESC, id DESC')->page ($page, $row)->select ();
    		$this->assign('categorys', $categorys);
    		
    		$this->assign('totalPage', $count);
    		$this->assign('listRow', $row);
    		$this->assign('games', $games);
    		$this->assign('gamecount', $userTotalData);
    		$this->display('userview');
    	}
    }

    // 创建游戏
	public function create() {
		// 生成templete.json文件
        $env = (APP_STATUS == 'production') ? 1 : 0;
        $name = !empty($_POST['name']) ? $_POST['name'] : '';
        
        $map = array('name'=>$name);
        if ($env === 1) {
            if ($this->mid == 1) {
				// 超级管理员可以看到发布和预发布的模板
				$map['status'] = array('in', '2,3');
			} else {
				$map['status'] = 2;
			}
        } else {
            $map['status'] = array('neq', 0);
        }
		
        $token = generate_nonce_str(8);
        $template = D('Template');
        $template->where($map)->find();
        if (empty($template->id)) {
            $this->error('模板'.$name.'不存在！');
        }
        
        $title = !empty($_POST['title']) ? $_POST['title'] : $template->title;
        $project = D('Project');
        // 同一人在同一个环境的名称不能重复
        $cond = array('uid'=>$this->mid, 'title'=>$title, 'env'=>$env, 'status'=>array('neq', 0));
        $projectinfo = $project->where($cond)->find();
        if(!empty($projectinfo)) {
        	$this->error('项目名称已存在！');
        }
        
        $category=!empty($_POST['category'])?$_POST['category']:0;
       
        $project->create();
        $project->name = $name;
        $project->title =$title;
        $project->desc = $template->desc;
        $project->uid = $this->user['uid'];
        $project->username = $this->user['username'];
        $project->token = $token;
        $project->template_id = $template->id;
//         $project->create_time = time();
//         $project->modify_time = 0;
//         $project->status = 1;
        $project->icon_url = $template->icon_url;
        $project->env = $env;
        $project->category =$category;
        if(!empty($template->setting)){
            $settings = json_decode($template->setting,true);
        }else{
            $settings = array(
                'FIRST_INIT_TIMES'=>1,
                'DAY_OF_FREE_TIMES'=>3,
                'TIMES_PER_SHARE_CLICK'=>1,
                'DIFFCULT_PROBABILITY'=>1,
                'MAX_POOL_SIZE'=>'100',
                'NON_AWARD_ID_PROBABILITY'=>'3000',
                'ENABLE_FIRST_AWARD'=>true,
                'ENABLE_APP'=>true,
                'CLOSE_EXCHANGE'=>false,
                'sort'=>'max',
                'order'=>'desc',
                'RELATION_ACTION'=>'addfriendscore',
            );
        }
        $project->setting = json_encode($settings);
        $add_result = $project->add();
        if (!$add_result) {
            $this->error('模板'.$name.'创建失败！');
        }

        $template->used_times += 1;
        $template->save();
            
        $gamecreator_app_path = SITE_PATH.'/webroot/Public/gamecreator/app/';
        mkdir($gamecreator_app_path.$token, 0755, true);
        chmod($gamecreator_app_path.$token, 0755);
        $template_path = SITE_PATH.'/webroot/Public/gamecreator/templates/';
        File::copy_dir($template_path.'/'.$name, $gamecreator_app_path.$token);
        $this->success('创建成功', U('editor', array('appid'=>$token)));
	}
	
    // 编辑
	public function editor($appid) {
        if (!is_login()) {
            redirect(U('User/newlogin'));
        }
        
        $time = time();
        $this->assign('t', $time);
        $this->assign('app_id', $appid);
        
        $project = D('Project');
        $map = array();
        $map['token'] = $appid;
        $env = (APP_STATUS == 'production') ? 1 : 0;
        $map['env'] = $env;
        $map['status'] = array('neq', 0);
        $projectinfo = $project->where($map)->find();

        if($this->mid != $projectinfo['uid'] && $this->mid != 1) {
            $this->error('项目('.$appid.')不属于你！');
        }
        
        $this->assign('token', $appid);
        $appid = $projectinfo['id'];
        $template = D('Template');
        $template->where(array('id'=>$project->template_id))->find();

        //获取raffletypes
        $raffletypes = '';
        if($template->setting){
            $template_setting = json_decode($template->setting, true);
            if(isset($template_setting['RAFFLE_TYPES'])){
                $raffletypes = $template_setting['RAFFLE_TYPES'];
            }
        }
        $this->assign("raffletypes", $raffletypes);

        $this->assign('mode', $template->mode);
        $sdk_settings = D('sdk_settings');
        $rows = $sdk_settings->where(array('appid'=>$appid))->select();
        if(empty($rows)){
            $setting = array();
        }else{
            foreach ($rows as $row) {
                $item_key = $row['item_key'];
                if($item_key == "starttime" || $item_key == "endtime"){
                    $row['item_value'] = date("m/d/Y",$row['item_value']);
                }

                $setting[$item_key] = $row['item_value'];

            }
        }

        $sdk_lottery_prize = D('sdk_lottery_prize');
        $prizes = $sdk_lottery_prize->where(array('appid'=>$appid))->select();
        foreach ($prizes as &$row) {
            if(!empty($row['lot_code_setting'])){
                $row['lot_code_setting'] = json_decode($row['lot_code_setting'], true);
            }else{
                $row['lot_code_setting'] = "";
            }
        }

        if(empty($prizes)) $prizes = array();
        $this->assign('setting', json_encode($setting));
        $this->assign('prizes', json_encode($prizes));
        $this->assign('appid', $projectinfo['id']);

        $this->display();
	}
    
    // 游戏设置信息
    public function gamesetting($appid) {
        $gamecreator_app_path = SITE_PATH.'/webroot/Public/gamecreator/app/';
        header('Content-Type: application/json');
        echo file_get_contents($gamecreator_app_path.$appid.'/template.json');
    }
	
    // 检查应用名称
	public function checkName($name) {
        if (empty($name)) {
            $this->ajaxReturn(array('error'=>'项目名称不能为空！'));
        }
        
		$project = D('Project');
        $env = (APP_STATUS == 'production') ? 1 : 0;
        // 同一人在同一个环境的名称不能重复
        $map = array('title'=>$name, 'uid'=>$this->mid, 'status'=>array('neq', 0), 'env'=>$env);
        $ret = $project->where($map)->find();
		if ($ret) {
			$this->ajaxReturn(array('error'=>'该项目名称已经存在'));
		}
		$this->ajaxReturn(array('success'=>1));
	}
	
    // 更新数据
	public function write($appid, $filename) {
		$filedata = isset($_POST['filedata']) ? $_POST['filedata'] : '';
		$basepath = SITE_PATH.'/webroot/Public/gamecreator/app/'.$appid.'/';
		if (is_dir($basepath)) {
			file_put_contents($basepath . $filename, $filedata);
			$this->ajaxReturn(array('success'=>1));
		} else {
			$this->ajaxReturn(array('error'=>'app目录不存在'));
		}
	}
	
    // 替换资源
	public function replace($appid) {
        $res = I('res');
        $web = I('web');
		$basepath = SITE_PATH.'/webroot/Public/gamecreator/app/'.$appid.'/';
		if (is_dir($basepath)) {
			$imageInfo= @getimagesize($basepath . $res);
			file_put_contents($basepath . $res, file_get_contents($web));
		   //执行压缩类
			$image = new ImageFile($basepath . $res, $imageInfo[0], $imageInfo[1], '0',$basepath . $res);
			// 执行打包命令
			$picture=new PictureModel();
			$picture->packPicture($basepath);
			
			$this->ajaxReturn(array('success'=>1));
		}
        
		$this->ajaxReturn(array('error'=>'app目录不存在'));
	}
	
    // 发布游戏
	public function publish($appid) {
        if (!is_login()) {
            redirect(U('User/newlogin'));
        }
        
        // 发布
        $env = (APP_STATUS == 'production') ? 1 : 0;
        $map = array('token'=>$appid, 'status'=>array('gt',0), 'env'=>$env);
        $project = D('Project');
        $row = $project->where($map)->find();
        if (!$project) $this->error('项目('.$appid.')不存在');
        
        $project->status = 2;
        $project->save();
        $template = D('Template');
        $templateInfo = $template->where(array('id'=>$row['template_id']))->find();
        $publish_url = "http://".SITE_DOMAIN.'/play/'.$appid;
        $qr_svg = "http://". SITE_DOMAIN ."/index.php?s=/Home/Bee1/publishQRCode/appid/{$appid}";
        $this->assign('appid', $appid);
        $this->assign('template_name', $row['name']);
        $this->assign('mode', $templateInfo['mode']);
        $this->assign('url', $publish_url);
        $this->assign('pc_url', $publish_url.'/?openid=otuWJjvQKhb9nn1xL8v-IRrgxct8');
        $this->assign('qr_svg', $qr_svg);
        $this->assginCategory();
        
        $view_file = 'demo';
        if ($templateInfo['mode'] == 1) {
            $view_file = 'demo2';
        }
        
		$this->display($view_file);
    }
    
    public function upload($appid) {
        $filename = $_GET['filename'];
        $basepath = SITE_PATH.'/webroot/Public/gamecreator/app/'.$appid.'/';
        if ($_FILES['files']['name'][0] != '') {
            if ($_FILES['files']['error'][0]) {
                $this->ajaxReturn(array('code'=>'1','msg'=>uploadErr($_FILES['files']['error'][0]),'data'=>array()));
            } else {
                if(!in_array(strtolower(substr(strrchr($_FILES['files']['name'][0], '.'), 1)), array('jpg','jpeg','png'))){
                    $this->ajaxReturn(array('code'=>'1','msg'=>'上传文件格式错误','data'=>array()));
                }

            	$file_size = $_FILES['files']['size'][0];
            	if ($file_size > 800 * 1024) {
                    $this->ajaxReturn(array('code'=>'1','msg'=>'上传图片不能超出800KB', 'data'=>array()));            		
            	}else{
                	$result= move_uploaded_file($_FILES['files']['tmp_name'][0] , $basepath . $filename);
                    if($result) {
                        //$imageInfo = @getimagesize($basepath . $filename);
                        //执行压缩类
                        //$image = new \Org\Util\ImageFile($basepath.$filename, $imageInfo[0], $imageInfo[1], '0', $basepath.$filename);
                         // 执行打包命令
                        $picture = new PictureModel();
                        $picture->packPicture($basepath);
                    }
                    
                    $res = array('success'=>1);
            	}
            }
        } else {
            $this->ajaxReturn(array('code'=>'1','msg'=>'请上传文件！','data'=>array()));
        }
        
        $this->ajaxReturn($res);
    }

    public function settingUpload($appid){
        $filename =  $_GET['filename'];
        if(empty($filename)){
            $filename = time() . '.png';
        }

        $data = $_POST['data'];
        $basepath = SITE_PATH.'/webroot/Public/gamecreator/app/'.$appid.'/';

        if ($_FILES['files']['name'][0] != '') {
            if ($_FILES['files']['error'][0]) {
                $this->ajaxReturn(array('code'=>'1','msg'=>'上传文件出错','data'=>array()));
            } else {

                if(!in_array(strtolower(substr(strrchr($_FILES['files']['name'][0], '.'), 1)), array('jpg','jpeg','png'))){
                    $this->ajaxReturn(array('code'=>'1','msg'=>'上传文件格式错误','data'=>array()));
                }

                $file_size = $_FILES['files']['size'][0];
                $imageInfotmp = @getimagesize($_FILES['files']['tmp_name'][0]);
                $imageInfo= @getimagesize($basepath . $filename);
                if($file_size>800*1024){
                    $this->ajaxReturn(array('code'=>'1','msg'=>'上传图片不能超出800KB','data'=>array()));
                }else{
                    $result= move_uploaded_file($_FILES['files']['tmp_name'][0] , $basepath . $filename);
                    if($result){
                        $image = new \Org\Util\ImageFile($basepath . $filename, 300, 300, '0',$basepath . $filename);
                        $res = array('success'=>1,'filename'=>$filename);
                    }
                }
            }
        } else {
            $this->ajaxReturn(array('code'=>'1','msg'=>'请上传文件！','data'=>array()));
        }

        $this->ajaxReturn($res);
    }

    public function deletefile($appid){
        $filename =  $_GET['filename'];
        if(empty($filename)){
            $this->ajaxReturn(array('success'=>0,'msg'=>''));
        }
        $basepath = SITE_PATH.'/webroot/Public/gamecreator/app/'.$appid.'/';
        if(file_exists($basepath . $filename)){
            unlink($basepath . $filename );
            $this->ajaxReturn(array('success'=>1));
        }
        $this->ajaxReturn(array('success'=>0,'msg'=>'文件不存在'));
    }

    public function publishQRCode($appid) {
        vendor('phpqrcode.phpqrcode');
        $publish_url = "http://" . SITE_DOMAIN . '/play/'.$appid;
		header("content-disposition: attachment; filename=qrcode.png");
       \QRcode::png($publish_url,$outfile = false, $level = QR_ECLEVEL_L,$size = 8);
    }
    
    // 常见问题Q&A
    public function qa() {
    	$this->display();
    }
    
    /**
	 * 列出目录
	 * @param $dir  目录名
	 * @return 目录数组。列出文件夹下内容，返回数组 $dirArray['dir']:存文件夹；$dirArray['file']：存文件
	 */
	private function get_dirs($dir, $filter = '') {
		$dir = rtrim($dir,'/').'/';
		//$dirArray [][] = NULL;
        $dirArray = array();
        $dirArray['dir'] = array();
        $dirArray['file'] = array();
		if (false != ($handle = opendir ( $dir ))) {
			$i = 0;
			$j = 0;
			while ( false !== ($file = readdir ( $handle )) ) {
                if ($file == '.' || $file == '..')  continue;
				if (is_dir ( $dir . $file )) { //判断是否文件夹
					$dirArray ['dir'] [$i] = $file;
					$i ++;
				} else {
                    if ($filter) {
                        $extension = pathinfo($file, PATHINFO_EXTENSION);
                        if ($extension != $filter) {
                            continue;
                        }
                    }
					
                    $dirArray ['file'] [$j] = $file;
					$j ++;
				}
			}
			closedir ($handle);
		}
		return $dirArray;
	}

    public function demo($name) {
        $project = D('Project');
        $env = (APP_STATUS == 'production') ? 1 : 0;
        $projects = $project->where(array('name'=>$name, 'is_diy'=>2, 'env'=>$env))->select();
        $template = D('Template');
        $rows = $template->where(array('name'=>$name,'is_show'=>1))->select();
        $mode = $rows[0]['mode'];
        if (empty($projects)) {
            if (!empty($rows)) {
                $row = $rows[0];
                $token = generate_nonce_str(8);
                $insertdata = array(
                    'name'=>$name,
                    'title'=>$row['title'],
                    'desc'=>$row['desc'],
                    'uid'=>'',
                    'username'=>'',
                    'token'=>$token,
                    'template_id'=>$row['id'],
                    'create_time'=>$row['create_time'],
                    'modify_time'=>$row['modify_time'],
                    'status'=>2,
                    'icon_url'=>$row['icon_url'],
                    'appsecret'=>'',
                    'is_diy'=>2
                );
                $project->add($insertdata);
                $appid = $token;
            } else {
                $appid = 0;
            }
        } else {
            $appid = $projects[0]['token'];
        }
        
        if($appid){
            $url = "http://".SITE_DOMAIN.'/Public/gamecreator/templates/'.$name.'/?appid='.$appid;
        }else{
            $url = '';
        }

        $this->assign('mode', $mode);
        $this->assign('template_name', $name);
        $this->assign('pc_url', $url.'&openid=otuWJjvQKhb9nn1xL8v-IRrgxct8');
        $this->assign('url', $url);
        $qr_svg = "http://".SITE_DOMAIN."/index.php?s=/Home/Bee1/demoSvg/appid/{$appid}/name/{$name}";
        $this->assign('qr_svg', $qr_svg);
        $this->assginCategory();
        if ($mode == 1) {
            $this->display('demo2');
        } else {
            $this->display();
        }
    }
    
    public function demoSvg($appid, $name) {
        vendor('phpqrcode.phpqrcode');
        $publish_url = "http://".SITE_DOMAIN.'/Public/gamecreator/templates/'.$name.'/?appid='.$appid;
        header("content-disposition: attachment; filename=qrcode.png");
        \QRcode::png($publish_url,$outfile = false, $level = QR_ECLEVEL_L,$size = 8);
    }
    
    // 异步加载二维码
    public function imgSrcSvg($name) {
    	$project = D('Project');
    	$env = (APP_STATUS == 'production') ? 1 : 0;
    	$projects = $project->where(array('name'=>$name, 'is_diy'=>2, 'env'=>$env))->select();
    	$template = D('Template');
    	$rows = $template->where(array('name'=>$name,'is_show'=>1))->select();
    	if (empty($projects)) {
    		if (!empty($rows)) {
    			$row = $rows[0];
    			$token = generate_nonce_str(8);
    			$insertdata = array(
    					'name'=>$name,
    					'title'=>$row['title'],
    					'desc'=>$row['desc'],
    					'uid'=>'',
    					'username'=>'',
    					'token'=>$token,
    					'template_id'=>$row['id'],
    					'create_time'=>$row['create_time'],
    					'modify_time'=>$row['modify_time'],
    					'status'=>2,
    					'icon_url'=>$row['icon_url'],
    					'appsecret'=>'',
    					'is_diy'=>2
    			);
    			$project->add($insertdata);
    			$appid = $token;
    		} else {
    			$appid = 0;
    		}
    	} else {
    		$appid = $projects[0]['token'];
    	}
    	
    	$publish_url = "http://".SITE_DOMAIN.'/Public/gamecreator/templates/'.$name.'/?appid='.$appid;
    	return  $publish_url;
    }
    
    // 模板显示页
    public function template_ajax() {
        $map = array('is_show'=>1);
        if (APP_STATUS == 'production') {
            if ($this->mid == 1) {
				// 超级管理员可以看到发布和预发布的模板
				$map['status'] = array('in', '2,3');
			} else {
				$map['status'] = 2;
			} 
        } else {
            $map['status'] = array('neq', 0);
        }
        
        //查询条件
         $s_cate=!empty($_POST['s_cate'])?$_POST['s_cate']:'';
         $s_tag=!empty($_POST['s_tag'])?$_POST['s_tag']:'';
         $s_new=!empty($_POST['s_new'])?$_POST['s_new']:'';
         $s_hot=!empty($_POST['s_hot'])?$_POST['s_hot']:'';
         $order='sort desc, create_time desc';
         if($s_cate){
         	$map['_string']="FIND_IN_SET($s_cate, category)";
         
         }
         if($s_tag){
         	$map['_string']="FIND_IN_SET($s_tag, tag)";
          }
         
         if($s_hot){
         	$order='used_times desc ';
         }
          if($s_new){
         	$order='sort desc, create_time desc';
         }
        $pageno = !empty($_POST['page']) ? $_POST['page'] : 1;
        $row = !empty($_POST['row']) ? $_POST['row'] : $this->pagesize;

        $template = D('Template');
        $templates = $template->where($map)
            ->order($order)
            ->page($pageno, $row)
            ->select();
        
        $count = $template->where($map)->count();
        foreach($templates as $key=>$val) {
            $templates[$key]['imgurl'] = get_production_cover_url($val['icon_url']);
        	$templates[$key]['sw'] = U('demo', 'name='.$val['name']);
        	$templates[$key]['create'] = U('project/create', 'name='.$val['name']);
            
            if (empty($val['apptoken'])) {
                $token = generate_nonce_str(8);
                $time = time();
                $insertdata = array(
                    'name'=>$val['name'],
                    'title'=>$val['title'],
                    'desc'=>$val['desc'],
                    'uid'=>'0',
                    'username'=>'游戏模板',
                    'token'=>$token,
                    'template_id'=>$val['id'],
                    'create_time'=>$time,
                    'modify_time'=>0,
                    'status'=>2,
                    'icon_url'=>$val['icon_url'],
                    'appsecret'=>'',
                    'is_diy'=>2
                );

                D('Project')->add($insertdata);
                $template->where(array('id'=>$val['id']))->save(array('apptoken'=>$token));
                $templates[$key]['codeurl'] = "http://".SITE_DOMAIN.'/Public/gamecreator/templates/'.$val['name'].'/?appid='.$token;
            } else {
                $templates[$key]['codeurl'] = "http://".SITE_DOMAIN.'/Public/gamecreator/templates/'.$val['name'].'/?appid='.$val['apptoken'];
            }
        }
        
        $pagenum=ceil($count/$row);
        $is_page=$pagenum<=$pageno?1:0;
        $ret=array('page'=>$pageno,'data'=>$templates,'ispage'=>$is_page);
        $this->ajaxReturn($ret);
    }
    
    
    public function statDetail($appid) {
        if(!is_login()) {
            redirect(U('User/newlogin'));
        }
        
        $period || $period = I('period', 'today');
        
        $Model = D('Project');
        
    	$env = (APP_STATUS == 'production') ? $Model::PROJECT_ENV_PRODUCTION : $Model::PROJECT_ENV_TEST;
    	//$map = array('token' => $appid, 'env' => $env, 'uid' => $this->mid);
    	$map = array('token' => $appid, 'env' => $env);
    	if ($env === $Model::PROJECT_ENV_PRODUCTION) {
    	   $map['status'] = $Model::PROJECT_STATUS_ONLINE;
    	} else {
    	   $map['status'] = array('neq', $Model::PROJECT_STATUS_DELETE);
    	}
    	
    	$project = $Model->where ( $map )->find ();
    	if (!$project) {
    	    $this->error('此项目不存在！');
    	}
    	
    	$data = array();
    	
		$id = $project['id'];
		 
		$settingModel = D('Settings');
	
		if (! IS_POST) {
// 		    $data['id'] = $id;
		    $data['appid'] = $project['token'];
		    $data['title']    = $project['title'];
		    $data['icon_url'] = 'Public/gamecreator/app/'. $project['token'] .'/icon.png';
		    
			$data['status_name'] = $Model->getNameByProjectStatus( $project['status'] );
			$appcount = $settingModel->getRedisDataByAppid($id);
			$appcount['pv'] = $appcount['pageview'];
			$appcount['uv'] = $appcount['userview'];
			$appcount['sc'] = $appcount['sharecount'];
			unset($appcount['pageview'], $appcount['userview'], $appcount['sharecount']);
			$appcount['fr'] = (number_format($appcount['sc'] / $appcount['pv'], 2) * 100) . '%';
			$data['appcount'] = $appcount;
			
			$raffleTypeArrs = $settingModel->where ( array('appid' => $id, 'item_key' => 'raffletype') )->find ();
			if($raffleTypeArrs) $raffleType = $raffleTypeArrs['item_value'];
			else {
			    $LotteryPrizeModel = D('LotteryPrize');
			    $prizeArrs = $LotteryPrizeModel->getAllPrize($id);
			    $raffleType = isset($prizeArrs[1]) ? (string) $prizeArrs[1]['lot_type'] : 0;
			}
		    $prizeType = 'none';
            switch ($raffleType) {
            	case "1":
            	    $prizeType = 'coupon';
            	    break;
            	case "2":
            	    $prizeType = 'rankdata';
            	    break;
            	case "0":
            	default:
            	    $prizeType = 'raffle';
            	    break;
            }
		}
		
		$xAxis = $curOption = array();
		$xAxisName = $yAxisName = '';
		
		switch ($period) {
			case 'yesterday':
				for($i=0; $i<24; $i++) $xAxis[] = $i;
				$xAxisName = '时';
				$yAxisName = '次/时';
				break;
			case 'week':
				for($i=6; $i>=0; $i--)  $xAxis[] = date('Y-m-d', strtotime((string)(-$i) ." days"));
				$xAxisName = '日';
				$yAxisName = '次/日';
				break;
			case 'month':
				for($i=29; $i>=0; $i--) $xAxis[] = date('Y-m-d', strtotime((string)(-$i) ." days"));
				$xAxisName = '日';
				$yAxisName = '次/日';
				break;
			case 'today':
			default:
                for($i=0; $i<24; $i++) $xAxis[] = $i;
                $xAxisName = '时';
                $yAxisName = '次/时';
				break;
		}
		
		$xCount['pv'] = $settingModel->getRedisDataByAppidTypePeriod($id, 'pv', $period);
		$xCount['uv'] = $settingModel->getRedisDataByAppidTypePeriod($id, 'uv', $period);
		$xCount['sc'] = $settingModel->getRedisDataByAppidTypePeriod($id, 'sc', $period);
		
		$xArr = $yArr = array();
		
		$xName = array('pv'=>'浏览量', 'uv'=>'访客数', 'sc'=>'转发数');
		foreach ($xName as $k => $v) {
		    $xArr[] = array(
		            'name' => $v,
		            'type' => 'line',
		            'data' => $xCount[$k]['v']
		    );
		    $xTotal[] = $xCount[$k]['c'];
		}
		$chartZx = array (
	        'xAxis'  => array('type'=> 'category', 'name' => '时间('. $xAxisName .')','data' => $xAxis),
		    'yAxis'  => array('type'=> 'value', 'name' => '数量('. $yAxisName .')'),
	        'series' => $xArr,
		    'total'  => $xTotal
        );
		$curOption['chartZx'] = $chartZx;
		
		$yName = array('pv'=>'浏览量', 'sc'=>'转发数'/*'uv'=>'转发数', 'sc'=>'转发率'*/);
		$yMax = $xCount['pv']['c'] > $xCount['sc']['c'] ? $xCount['pv']['c'] : $xCount['sc']['c'];
		foreach ($yName as $k => $v) {
		    $yArr[] = array(
		            'name'   => $v,
		            'value'  => $xCount[$k]['c']
		    );
		}
		$chartLd['title'] = array(
		        'text'       => '转发率为 '. (number_format($xCount['sc']['c'] / $xCount['pv']['c'], 2) * 100) .'%',
		        'subtext'    => '(转发率 = 转发数 / 浏览量)',
		 );
		$chartLd['series'] = array ('type' => 'funnel', 'width'=> '80%', 'min'=>0, /*'max'=>100,*/'max'=>$yMax, 'minSize'=>'0%', 'maxSize'=>'80%', 'data' => $yArr);
		$curOption['chartLd'] = $chartLd;
		
		if (! IS_POST) {
		    $this->assign('curMenuTab', 'statistics');
		    $this->assign('prizeType', $prizeType);
		    $this->assign('game', $data);
		    $this->assign('curOption', json_encode($curOption));
		    $this->display();
		} else {
		    $this->success ( $curOption );
		}

    }
    
    public function statLottery($appid) {
        $Model = D('Project');
        $env = (APP_STATUS == 'production') ? $Model::PROJECT_ENV_PRODUCTION : $Model::PROJECT_ENV_TEST;
        //$map = array('token' => $appid, 'env' => $env, 'uid' => $this->mid);
        $map = array('token' => $appid, 'env' => $env);
        if ($env === $Model::PROJECT_ENV_PRODUCTION) {
            $map['status'] = $Model::PROJECT_STATUS_ONLINE;
        } else {
            $map['status'] = array('neq', $Model::PROJECT_STATUS_DELETE);
        }
        
    	$project = $Model->where ( $map )->find ();
    	if (!$project) {
    	    $this->error('此项目不存在！');
    	}
    	
    	$page = I('p', 1, 'intval');
    	$row = I('list_row', 8, 'intval');
    	
		$id = $project['id'];
		$lotteryDatas = array();
		$htmlPage = '';
		
		//$SettingModel = D('Settings');
		$LotteryLogModel = D('LotteryLog');
		$raffleType = $LotteryLogModel::LOT_TYPE_RAFFLE;
		//$raffleType = $SettingModel->getConf($id, 'raffletype', $LotteryLogModel::LOT_TYPE_NONE);
		$lotterylogMap = array('appid' => $id, 'status' => 1, 'lot_type'=>$raffleType, 'lot_id'=>array('neq', 0));
		$lotterysArrs = $LotteryLogModel->where ( $lotterylogMap )->order('create_time DESC,id DESC') ->page($page, $row)->select ();
		
		if($lotterysArrs) {
		    $count = $LotteryLogModel->where($lotterylogMap)->count();
		    
		    // 分页
		    if ($count > $row) {
		        $page = new \Think\Page ( $count, $row, array('appid' => $appid) );
		        $page->setConfig('theme', '%FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% %HEADER%');
		        $htmlPage = $page->show();
		    }
		    
		    $openIds = array();
		    foreach ($lotterysArrs as $val) {
		        $openIds[] = $val['openid'];
		    }
            $openIds = array_unique($openIds);
		    
		    $LotteryPrizeModel = D('LotteryPrize');
		    $prizeArrs = $LotteryPrizeModel->getAllPrize($id);
		    
		    $UserModel = D('User');
		    $nickNames = array();
		    $nicknameArr = $UserModel->field (array('openid', 'nickname'))->where ( array('openid' => array('in', $openIds)) )->select ();
		    foreach ($nicknameArr as $val) {
		        $nickNames[$val['openid']] = $val['nickname'];
		    }
		    
		    $GameDataModel = D('GameData');
		    $gamedataMap = array('appid' => $id, 'dtype' => 'exchange', 'openid' => array('in', $openIds));
		    $gamedataArr = $GameDataModel->where ( $gamedataMap )->order('id DESC') ->page($page, $row)->select ();
		    $gameDatas = array();
		    
		    foreach ($gamedataArr as $val) {
		        $dval = $val['dvalue'] ? json_decode($val['dvalue'], true) : array();
		        $gameDatas[$val['dkey']]['tel'] = $dval['tel'];
		        /* if(is_numeric($val['dvalue'])) {
		            if(is_numeric($val['dvalue'])) $gameDatas[$val['openid']]['tel'][] = $val['dvalue'];
		        } else {
		            $dval = $val['dvalue'] ? json_decode($val['dvalue'], true) : array();
		            if(isset($dval['mobil']) && is_numeric($dval['mobil']))       $gameDatas[$val['openid']]['tel'][] = $dval['mobil'];
		            elseif (isset($dval['phone']) && is_numeric($dval['phone']))  $gameDatas[$val['openid']]['tel'][] = $dval['phone'];
		            elseif (isset($dval['mobi']) && is_numeric($dval['mobi']))    $gameDatas[$val['openid']]['tel'][] = $dval['mobi'];
		            elseif (isset($dval['tel']) && is_numeric($dval['tel']))      $gameDatas[$val['openid']]['tel'][] = $dval['tel'];
		        } */
		    }
		    $lId = 0;
		    foreach ($lotterysArrs as $val) {
		        //$lId = $val['id'];
		        $lotteryDatas[$lId]['lot_name']   = $prizeArrs[$val['lot_id']]['lot_name'];
		        $lotteryDatas[$lId]['nickname']   = isset($nickNames[$val['openid']]) ? $nickNames[$val['openid']] : '未知';
		        $lotteryDatas[$lId]['tel']        = isset($gameDatas[$val['id']]['tel']) ?
		              $gameDatas[$val['id']]['tel'] : '';
		        $lotteryDatas[$lId]['create_time'] = date("y/m/d H:i:s", $val['create_time']);
		        $lId++;
		    }
		}
		
		$this->success ( array('lotterys' => $lotteryDatas, 'pages' => $htmlPage) );
    }
    
    public function statUserdata($appid) {
        $Model = D('Project');
        
    	$env = (APP_STATUS == 'production') ? $Model::PROJECT_ENV_PRODUCTION : $Model::PROJECT_ENV_TEST;
    	$map = array('token' => $appid, 'env' => $env/*, 'uid' => $this->mid*/);
    	
    	if ($env === $Model::PROJECT_ENV_PRODUCTION) {
    	   $map['status'] = $Model::PROJECT_STATUS_ONLINE;
    	} else {
    	   $map['status'] = array('neq', $Model::PROJECT_STATUS_DELETE);
    	}
    	
        $project = $Model->where ( $map )->find ();
        if (!$project) {
            $this->error('此项目不存在！');
        }
        
        $page = I('p', 1, 'intval');
        $row = I('list_row', 8, 'intval');
             
        $id = $project['id'];
        $gameDatas = array();
        $htmlPage = '';
        
        $GameDataModel = D('GameData');
        $gamedataMap = array('appid'=>$id, 'dtype'=>'exchange', 'status'=>1);
		$gamedataArr = $GameDataModel->where($gamedataMap)->order('create_time DESC,id DESC') ->page($page, $row)->select ();
		if ($gamedataArr) {
		    $count = $GameDataModel->where($gamedataMap)->count();
		    // 分页
		    if ($count > $row) {
		        $page = new \Think\Page ( $count, $row, array('appid' => $appid) );
		        $page->setConfig('theme', '%FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% %HEADER%');
		        $htmlPage = $page->show();
		    }		  
		    
		    $gdId = 0;
		    foreach ($gamedataArr as $val) {
                $dval = $val['dvalue'] ? json_decode($val['dvalue'], true) : array();
                $gameDatas[$gdId]['nickname'] = isset($dval['name']) ? $dval['name'] : '';
                $gameDatas[$gdId]['tel'] = isset($dval['tel']) ? $dval['tel'] : '';
                $gameDatas[$gdId]['addr'] = isset($dval['address']) ? $dval['address'] : '';
		        $gdId++;
		    }
		}
    	
        $this->success ( array('gamedatas' => $gameDatas, 'pages' => $htmlPage) );
    }
    
    public function statCoupon($appid) {
        $type || $type = I('type', 'all');
        $code || $code = I('code', '');
        
        $Model = D('Project');
    
        $env = (APP_STATUS == 'production') ? $Model::PROJECT_ENV_PRODUCTION : $Model::PROJECT_ENV_TEST;
        $map = array('token' => $appid, 'env' => $env, 'uid' => $this->mid);
        
        if ($env === $Model::PROJECT_ENV_PRODUCTION) {
            $map['status'] = $Model::PROJECT_STATUS_ONLINE;
        } else {
            $map['status'] = array('neq', $Model::PROJECT_STATUS_DELETE);
        }
         
        $project = $Model->where ( $map )->find ();
        if (!$project) {
            $this->error('此项目不存在！');
        }
        
        $page = I('p', 1, 'intval');
        $row = I('list_row', 8, 'intval');
        
        $id = $project['id'];
        $couponDatas = array();
        $htmlPage = '';

        $GameCodeModel = D('GameCode');

        $gamecodeMap = array('appid' => $id);
        
        switch ($type) {
        	case 'unexchange':
                    //$gamecodeMap['openid'] = array('EQ', '');
					$gamecodeMap['status'] = 2;
					break;
        	case 'exchanged':
					$gamecodeMap['status'] = 1;
					break;
        	case 'receive':
                    //$gamecodeMap['openid'] = array('NEQ', '');
					//$gamecodeMap['status'] = 2;
                    $gamecodeMap['status'] = array('IN', array(1, 3));
					break;
        	case 'all':
        	default:
            		break;
        }
        
        if($code) $gamecodeMap['gamecode'] = array('LIKE', '%'. $code .'%');
        
        $gamecodeArr = $GameCodeModel->where ( $gamecodeMap )->order('id DESC') ->page($page, $row)->select ();
        if($gamecodeArr) {
            $count = $GameCodeModel->where($gamecodeMap)->count();

            // 分页
            if ($count > $row) {
                $page = new \Think\Page ( $count, $row, array('appid' => $appid) );
                $page->setConfig('theme', '%FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% %HEADER%');
                $htmlPage = $page->show();
            }

            $gameCodes = array();
            foreach ($gamecodeArr as $val) {
                $gameCodes[] = $val['gamecode'];
            }

            $UserModel = D('Lottery');
            $nickNames = $createTimes = array();
            if(count($gameCodes) > 0) {
                $nicknameArr = $UserModel->field (array('openid', 'nickname', 'create_time', 'gamecode'))->where ( array('appid'=> $id, 'gamecode' => array('in', $gameCodes)) )->select ();
                foreach ($nicknameArr as $val) {
                    $nickNames[$val['openid']] = $val['nickname'];
                    $createTimes[$val['gamecode']] = $val['create_time'];
                }
            }
            
            $LotteryPrizeModel = D('LotteryPrize');
            $prizeArrs = $LotteryPrizeModel->getAllPrize($id);
            
            foreach ($gamecodeArr as $val) {
                $gcId = $val['id'];
                $couponDatas[$gcId]['lot_name'] = $prizeArrs[$val['lot_id']]['lot_name'];
                
                $gcNickname = $gcCreatetime = '';
                $gcStatus = $val['status'];
                if($val['openid']) {
                    $gcNickname = isset($nickNames[$val['openid']]) ? $nickNames[$val['openid']] : '未知';
                    $gcCreatetime = date("y/m/d H:i:s", $createTimes[$val['gamecode']]);
                    //$gcStatus = $val['status'] == 2 ? 3 : 1;
                }
                
                $couponDatas[$gcId]['nickname']     = $gcNickname;
                $couponDatas[$gcId]['create_time']  = $gcCreatetime;
                $couponDatas[$gcId]['status']   = $gcStatus;
                $couponDatas[$gcId]['gamecode'] = $val['gamecode'];
            }
        }
        
        $this->success ( array('coupondatas' => $couponDatas, 'type' => $type, 'pages' => $htmlPage) );
    }
    
    public function changeCouponStatus($appid) {
        $code || $code = I('code', '');
        $Model = D('Project');
        
        $env = (APP_STATUS == 'production') ? $Model::PROJECT_ENV_PRODUCTION : $Model::PROJECT_ENV_TEST;
        $map = array('token' => $appid, 'env' => $env, 'uid' => $this->mid);
        
        if ($env === $Model::PROJECT_ENV_PRODUCTION) {
            $map['status'] = $Model::PROJECT_STATUS_ONLINE;
        } else {
            $map['status'] = array('neq', $Model::PROJECT_STATUS_DELETE);
        }
         
        $project = $Model->where ( $map )->find ();
        if (!$project) {
            $this->error('此项目不存在！');
        }
             
        $id = $project['id'];
    
        $GameCodeModel = D('GameCode');
        
        $gamecodeMap = array('appid' => $id, 'gamecode' => $code, 'openid' => array('NEQ', ''), 'status' => 3);
        $res = $GameCodeModel->where($gamecodeMap)->save(array('status' => 1));
        if($res) $this->success ();
        else $this->error ();
        
    }
    
    public function statRankdata($appid) {
        $Model = D('Project');
    
        $env = (APP_STATUS == 'production') ? $Model::PROJECT_ENV_PRODUCTION : $Model::PROJECT_ENV_TEST;
        $map = array('token' => $appid, 'env' => $env/*, 'uid' => $this->mid*/);
         
        if ($env === $Model::PROJECT_ENV_PRODUCTION) {
        	   $map['status'] = $Model::PROJECT_STATUS_ONLINE;
        } else {
        	   $map['status'] = array('neq', $Model::PROJECT_STATUS_DELETE);
        }
         
        $project = $Model->where ( $map )->find ();
        if (!$project) {
            $this->error('此项目不存在！');
        }
    
        $page = I('p', 1, 'intval');
        $row = I('list_row', 8, 'intval');
        $lot_id = I('lot_id', 0, 'intval');
        
        $id = $project['id'];
        $rankDatas = array();
        $htmlPage = '';
        
        $redis = redis();
        $rkey = 'rank:appid:'. $id .':lot_id:'. $lot_id;
        $count = $redis->zcard($rkey);
        
        $LotteryPrizeModel = D('LotteryPrize');
        $prizeArrs = $LotteryPrizeModel->getAllPrize($id);
        if($prizeArrs) {
            $prizeCount = $firstNum = $lastNum = $lotCount = 0;
            $prizeDescArrs = $prizeSortArrs = $prizeSort = array();
            foreach ($prizeArrs as $key => $val) {
                $lot_setting = json_decode($val['lot_code_setting'], true);
                $firstNum   = isset($lot_setting['firstnum']) ? $lot_setting['firstnum'] : 0;
                $lastNum    = isset($lot_setting['lastnum']) ? $lot_setting['lastnum'] : 0;
                $lotCount   = $lastNum - $firstNum + 1;
                
                $prizeSort[$val['id']]      = $firstNum;
                $prizeSortArrs[$val['id']]  = array(
                    'lot_count' => $lotCount,
                    'lot_desc'  => $val['lot_desc'],
                );
                
                $prizeCount += $lotCount;
            }
            asort($prizeSort);
            $prizeId = 1;
            foreach ($prizeSort as $key => $val) {
                $lotDesc    = isset($prizeSortArrs[$key]['lot_desc']) ? $prizeSortArrs[$key]['lot_desc'] : '';
                $lotCount   = isset($prizeSortArrs[$key]['lot_count']) ? $prizeSortArrs[$key]['lot_count'] : 0;
                for ($i=0; $i<$lotCount; $i++) {
                    $prizeDescArrs[$prizeId] = $lotDesc;
                    $prizeId ++;
                } 
            }
            
            if($prizeCount > 0) {
                $rankId = ($page - 1) * $row + 1;
                $count = $count > $prizeCount ? $prizeCount : $count;
                $rowStart   = ($page - 1) * $row;
                $rowEnd     = ceil($count / $row) == $page ? $count - 1 : ($page * $row - 1);
                
                // 分页
                if ($count > $row) {
                    $page = new \Think\Page ( $count, $row, array('appid' => $appid) );
                    $page->setConfig('theme', '%FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% %HEADER%');
                    $htmlPage = $page->show();
                }
                
                $rankdataArr = $redis->zrevrange($rkey, $rowStart, $rowEnd, 'withscores');
                $openIds = array();
                foreach ($rankdataArr as $key => $val) {
                    $openIds[] = $key;
                }
                
                $UserModel = D('User');
                $nickNames = $nicknameArr = array();
                if(count($openIds) > 0) {
                    $nicknameArr = $UserModel->field (array('openid', 'nickname'))->where ( array('openid' => array('in', $openIds)) )->select ();
                    foreach ($nicknameArr as $val) {
                        $nickNames[$val['openid']] = $val['nickname'];
                    }
                }
                
                foreach ($rankdataArr as $key => $val) {
                    $rankDatas[$rankId]['nickname'] = isset($nickNames[$key]) ? $nickNames[$key] : '未知';
                    $rankDatas[$rankId]['rank_id']  = $rankId;
                    $rankDatas[$rankId]['lot_desc'] = $prizeDescArrs[$rankId];
                    $rankId++;
                }
            }
        }
        
        $this->success ( array('rankdatas' => $rankDatas, 'pages' => $htmlPage) );
    }
    
    public function copyCreate($appid) {
    	$title || $title = I('title');
    	$category || $category = I('category');
    	
    	$Model = D('Project');
    	
    	$env = (APP_STATUS == 'production') ? $Model::PROJECT_ENV_PRODUCTION : $Model::PROJECT_ENV_TEST;
    	$map = array('token' => $appid, 'env' => $env, 'uid' => $this->mid);
    	if ($env === $Model::PROJECT_ENV_PRODUCTION) {
    	    $map['status'] = $Model::PROJECT_STATUS_ONLINE;
    	} else {
    	    $map['status'] = array('neq', $Model::PROJECT_STATUS_DELETE);
    	}
    	
    	$token = $appid;
    	$data = $Model->where ( $map )->find ();
    	if($data) {
    		$time = time();
    		
    		$id = $data['id'];
    		unset($data['id']);
    		$newToken = generate_nonce_str(8);
    		
    		$data['token'] = $newToken;
    		$data['title'] = $title ? $title : $data['title'];
    		$data['category'] = $category ? $category : $data['category'];
    		
    		$Model->create($data);
    		$newId = $Model->add();
    		if ($newId && is_numeric($newId)) {
    		    if($data['template_id'] > 0) {
    		        $Template = D('Template');
    		        $Template->where ( array('id' => $data['template_id'], 'env' => $env) )->find ();
    		        $Template->used_times += 1;
    		        $Template->save();
    		    }
    			
    			$settings_data = $prizes_data = array();
    			
    			$SettingModel = M('sdk_settings');
    			$settingsData = $SettingModel->where ( array('appid' => $id) )->select ();
    			foreach ($settingsData as $settingKey => &$setting) {
    			    if(in_array($setting['item_key'], array('pageview', 'userview', 'sharecount'))) {
    			        unset($settingsData[$settingKey]);
    			    } else {
    			        unset($setting['id']);
    			        $setting['create_time'] = $time;
    			        $setting['modify_time'] = $time;
    			        $setting['appid'] = $newId;
    			    }
    			}
    			$SettingModel->addAll($settingsData);
    			
    			$LottryPrizeModel = M('sdk_lottery_prize');
    			$prizesData = $LottryPrizeModel->where ( array('appid' => $id) )->select ();
    			foreach ($prizesData as &$prize) {
    				unset($prize['id']);
    				$prize['create_time'] = $time;
    				$prize['modify_time'] = $time;
    				$prize['appid'] = $newId;
    			}
    			$LottryPrizeModel->addAll($prizesData);
    		}
    		
    		$gamecreator_app_path = SITE_PATH . '/webroot/Public/gamecreator/app/';
    		mkdir($gamecreator_app_path . $newToken, 0755, true);
    		chmod($gamecreator_app_path . $newToken, 0755);
    		File::copy_dir($gamecreator_app_path . $token, $gamecreator_app_path . $newToken);
    		
    		$this->ajaxReturn(1);
    	}
    	
    	$this->ajaxReturn(0);
    }
    
    public function editScene($appid){
    	$time = time();
    	$this->assign('t', $time);
    	$this->assign('app_id', $appid);
    	
    	$project = D('Project');
    	$env = (APP_STATUS == 'production') ? 1 : 0;
    	$projectinfo = $project->where(array('token'=>$appid, 'env'=>$env))->find();
    	if($this->mid != $projectinfo['uid'] && $this->mid != 1) {
    		$this->error('项目('.$appid.')不属于你！');
    	}
    	
    	$template = D('Template');
    	$template->where(array('id'=>$project->template_id))->find();
    	$name=$template->name;
    	$url = "http://".SITE_DOMAIN.'/Public/gamecreator/templates/'.$name.'/?appid='.$appid;
    	$this->assign('url', $url);
    	$this->assign('mode', $template->mode);
    	// $setting=$project->setting;
    	
    	// $setarr=!empty($setting)?json_decode($setting):null;
    	// $endtitle=isset($setarr->endtitle)?$setarr['endtitle']:'';
        $setting = D('sdk_settings');
        $row = $setting->where(array('appid'=>$projectinfo['id'], 'item_key'=>'endtitle'))->find();
        $endtitle = empty($row) ? '活动已结束，敬请关注更多精彩！' : $row['item_value'];
    	$this->assign('endtitle',$endtitle);
    	$this->display('editScene');
    }

    public function editshare($appid){
        $project = D('Project');
        $env = (APP_STATUS == 'production') ? 1 : 0;
        $projectinfo = $project->where(array('token'=>$appid, 'env'=>$env))->find();
        if($this->mid != $projectinfo['uid']) {
            $this->error('项目('.$appid.')不属于你！');
        }

        // 下线提示入sdk_setting库
        $endtitle = isset($_POST['endtitle']) ? $_POST['endtitle'] : '';
        if(!empty($endtitle)){
            $project = D('sdk_settings');
            $project->where(array('appid'=>$projectinfo['id'], 'item_key'=>'endtitle'))->delete();
            $time = time();
            $project->add(array(
                'appid'=>$projectinfo['id'],
                'item_key'=>'endtitle',
                'item_value'=>$endtitle,
                'status'=>1,
                'create_time'=>$time,
                'modify_time'=>$time
            ));
        }

        //分享图片覆盖icon.png
        $data = isset($_POST['imgdata']) ? $_POST['imgdata'] : '';
        $filename = 'icon.png';
        if(!empty($data)){
            $basepath = SITE_PATH.'/webroot/Public/gamecreator/app/'.$appid.'/';
            if(!empty($data) && is_dir($basepath)){
                file_put_contents($basepath . $filename, file_get_contents($data));
                $image = new \Org\Util\ImageFile($basepath . $filename, 300, 300, '0',$basepath . $filename);
                $res = array('success'=>1,'filename'=>$filename);
            } else {
                $this->ajaxReturn(array('error'=>1,'msg'=>'请上传文件！'));
            }
        }

        // 写入template.json文件
        $filedata = isset($_POST['filedata']) ? $_POST['filedata'] : '';
        if(!empty($filedata)){
            $this->write($appid, 'template.json');
        }
    }
    
    // 修改链接描述
    public function setinglink($id) {
    	$app = D('Project');
    	$appdata = $app->field(true)->where(array('id'=>$id) )->select();
    	if (empty($appdata)) {
    		$this->ajaxReturn(array('error'=>'项目不存在！'));
    	}
    	
        $time = time();
        $settingModel = D('Settings');
        $settingData = array('appid'=>$id,'status'=>1,'create_time'=>$time,'modify_time'=>0);
        if (isset($_POST['linkname'])) {
            if (empty($_POST['linkname'])) {
                $this->ajaxReturn(array('error'=>'链接描述不能为空！'));
            } else {
                $res = $settingModel->where(array('appid'=>$id, 'status'=>1, 'item_key'=>'linkname'))->find();
                if ($res) {
                    $settingModel->item_value = $_POST['linkname'];
                    $settingModel->modify_time = $time;
                    $res = $settingModel->save();
                } else {
                    $settingData['item_key'] = 'linkname';
                    $settingData['item_value'] = $_POST['linkname'];
                    $res = $settingModel->add($settingData);
                }
            }
        }

        if (isset($_POST['linkpath'])) {
            if (empty($_POST['linkpath'])) {
                $this->ajaxReturn(array('error'=>'链接地址不能为空！'));
            } else {
                $ss = preg_match_all('/(http|https|ftp|file){1}(:\/\/)?([\da-z-\.]+)\.([a-z]{2,6})([\/\w \.-?&%-=]*)*\/?/', $_POST['linkpath'], $urlall);
                if (empty($ss)) {
                    $this->ajaxReturn(array('error'=>'链接地址有误！！'));	
                }
                
                $res = $settingModel->where(array('appid'=>$id, 'status'=>1, 'item_key'=>'linkpath'))->find();
                if ($res) {
                    $settingModel->item_value = $_POST['linkpath'];
                    $settingModel->modify_time = $time;
                    $res = $settingModel->save();
                } else {
                    $settingData['item_key'] = 'linkpath';
                    $settingData['item_value'] = $_POST['linkpath'];
                    $res = $settingModel->add($settingData);
                }
            }
        }
        
        if (isset($_POST['islinkdesc'])) {
            $res = $settingModel->where(array('appid'=>$id, 'status'=>1, 'item_key'=>'islinkdesc'))->find();
            if ($res) {
                $settingModel->item_value = $_POST['islinkdesc'];
                $settingModel->modify_time = $time;
                $res = $settingModel->save();
            } else {
                $settingData['item_key'] = 'islinkdesc';
                $settingData['item_value'] = $_POST['islinkdesc'];
                $res = $settingModel->add($settingData);
            }
        }

        if ($res) {
            $this->ajaxReturn('设置成功');
        } else {
            $this->ajaxReturn(array('error'=>$settingModel->getError()));
        }
    }

    public function uploadcoupon(){
        // 解析文本 返回奖券
        if ($_FILES['files']['name'][0] != '') {
            if(strrchr($_FILES['files']['name'][0],'.') != '.txt'){
                $this->ajaxReturn(array('code'=>1, 'msg'=>'请导入txt格式的文本文件', 'data'=>''));
            }
            if (!$_FILES['files']['error'][0]) {
                $filecont = file_get_contents($_FILES['files']['tmp_name'][0]);
                $arr = explode("\n", $filecont);
                $data = array();
                foreach ($arr as $v) {
                    // 兑换长度截取20
                    $v = substr(trim($v), 0, 20);
                    if(preg_match("/^[a-zA-Z0-9\s]+$/",$v)) {
                        $data[] = $v;
                    }
                }
                
                if(empty($data)) {
                    $this->ajaxReturn(array('code'=>1, 'msg'=>'系统无法获取券号！', 'data'=>''));
                }
                
                $key = generate_nonce_str();
                //此处需要插入redis
                $records_count = $this->setGamecodeToRedis($key, $data);
                if ($records_count) {
                    $this->ajaxReturn(array("code"=>0, "msg"=>'', "data"=>array(
                        "key"=>$key,
                        "num"=>$records_count
                    )));
                } else {
                    $this->ajaxReturn(array('code'=>1,'msg'=>'存入redis错误','data'=>''));
                }
            }
        }
        
        $this->ajaxReturn(array('error'=>'解析奖券文件失败，请选择自动生成。'));
    }

    // 将键值对存入redis中
    private function setGamecodeToRedis($key, array $members) {
        $key = 'gamecode:'.$key;
        // 设置过期时间为2个小时，防止垃圾数据堆积
        $redis = redis();
        $redis->expire($key, 2*3600);
        return $redis->sadd($key, $members);
    }

    // 通过key 获取存入的数据，并删除之
    private function getGamecodeToRedis($key) {
        $key = 'gamecode:'.$key;
        $redis = redis();
        $result = $redis->smembers($key);
        // 为了节省存储空间，删除相关数据
        $redis->del($key);
        return $result;
    }
}